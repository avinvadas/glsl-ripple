{"id":"js/shaders/shader_frgmt__waves.glsl","dependencies":[{"name":"/Users/avinvadas/Documents/code projects/ripple_01/package.json","includedInParent":true,"mtime":1646402075729}],"generated":{"js":"module.exports = \"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n\\nuniform float u_time;\\nuniform vec2 u_resolution;\\nuniform vec2 u_random;\\n\\nvoid main() {\\n  vec2 st = gl_FragCoord.xy / u_resolution.xy;\\n\\n  // Set the background to black\\n  vec3 color = vec3(0.0);\\n\\n  // Calculate a random x position for each raindrop\\n  float x = u_random.x;\\n\\n  // Set the y position of the raindrop based on time\\n  float y = mod(gl_FragCoord.y + u_time * 100.0, u_resolution.y);\\n\\n  // Calculate the distance of the current pixel to the nearest raindrop\\n  float d = length(vec2(st.x - x, st.y - y));\\n\\n  // Draw a 2px-wide white raindrop if the current pixel is close enough to a raindrop\\n  if (d < 0.02) {\\n    color = vec3(1.0);\\n  }\\n\\n  gl_FragColor = vec4(color, 1.0);\\n}\\n\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shaders/shader_frgmt__waves.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shaders/shader_frgmt__waves.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shaders/shader_frgmt__waves.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shaders/shader_frgmt__waves.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shaders/shader_frgmt__waves.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":798},"source":"js/shaders/shader_frgmt__waves.glsl","original":{"line":1,"column":0}}],"sources":{"js/shaders/shader_frgmt__waves.glsl":"module.exports=\"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n\\nuniform float u_time;\\nuniform vec2 u_resolution;\\nuniform vec2 u_random;\\n\\nvoid main() {\\n  vec2 st = gl_FragCoord.xy / u_resolution.xy;\\n\\n  // Set the background to black\\n  vec3 color = vec3(0.0);\\n\\n  // Calculate a random x position for each raindrop\\n  float x = u_random.x;\\n\\n  // Set the y position of the raindrop based on time\\n  float y = mod(gl_FragCoord.y + u_time * 100.0, u_resolution.y);\\n\\n  // Calculate the distance of the current pixel to the nearest raindrop\\n  float d = length(vec2(st.x - x, st.y - y));\\n\\n  // Draw a 2px-wide white raindrop if the current pixel is close enough to a raindrop\\n  if (d < 0.02) {\\n    color = vec3(1.0);\\n  }\\n\\n  gl_FragColor = vec4(color, 1.0);\\n}\\n\";"},"lineCount":null}},"error":null,"hash":"93acdeb8b857735057cfbba3c22e5013","cacheData":{"env":{}}}