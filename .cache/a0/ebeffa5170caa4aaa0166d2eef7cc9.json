{"id":"js/shaders/shader02_frgmt.glsl","dependencies":[{"name":"/Users/avinvadas/Documents/code projects/ripple_01/package.json","includedInParent":true,"mtime":1646402075729}],"generated":{"js":"module.exports = \"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n#define PI 3.14159265359;\\nuniform vec2 u_resolution;\\nuniform vec2 u_mouse;\\nuniform float u_time;\\n\\nvoid main(){\\n   vec2 st = gl_FragCoord.xy/u_resolution.xy;\\n   \\n  \\n   \\n   st = (st *2.0 -0.5);\\n\\n \\n   //setting center and placement:\\n \\n  float pct = distance(vec2(st.x, st.y),vec2(0.5,0.1));\\n  \\n\\n //setting repetitional pattern:\\n  float d = 0.0;\\n  float ripple_size= 0.5;\\n  float wrap_size = 0.6;\\n  float ripple_number = 10.0;\\n  d = length( (pct-fract(u_time*0.01)));\\n \\n \\n\\n \\n  vec3 color= vec3(step(pct,wrap_size))-vec3(step(ripple_size,  fract(d * ripple_number  )))-\\n  vec3(smoothstep(0.5, 0.0, pct*1.75));\\n  \\n//inverting b/w\\n  vec3 color_invert = vec3(1.0-color);\\n\\n//setting final frag shade:\\n   gl_FragColor = vec4( vec3(color),1.0);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shaders/shader02_frgmt.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shaders/shader02_frgmt.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shaders/shader02_frgmt.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shaders/shader02_frgmt.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shaders/shader02_frgmt.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":857},"source":"js/shaders/shader02_frgmt.glsl","original":{"line":1,"column":0}}],"sources":{"js/shaders/shader02_frgmt.glsl":"module.exports=\"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n#define PI 3.14159265359;\\nuniform vec2 u_resolution;\\nuniform vec2 u_mouse;\\nuniform float u_time;\\n\\nvoid main(){\\n   vec2 st = gl_FragCoord.xy/u_resolution.xy;\\n   \\n  \\n   \\n   st = (st *2.0 -0.5);\\n\\n \\n   //setting center and placement:\\n \\n  float pct = distance(vec2(st.x, st.y),vec2(0.5,0.1));\\n  \\n\\n //setting repetitional pattern:\\n  float d = 0.0;\\n  float ripple_size= 0.5;\\n  float wrap_size = 0.6;\\n  float ripple_number = 10.0;\\n  d = length( (pct-fract(u_time*0.01)));\\n \\n \\n\\n \\n  vec3 color= vec3(step(pct,wrap_size))-vec3(step(ripple_size,  fract(d * ripple_number  )))-\\n  vec3(smoothstep(0.5, 0.0, pct*1.75));\\n  \\n//inverting b/w\\n  vec3 color_invert = vec3(1.0-color);\\n\\n//setting final frag shade:\\n   gl_FragColor = vec4( vec3(color),1.0);\\n}\";"},"lineCount":null}},"error":null,"hash":"c480eafa76ea08d58e9fc2c7666c4881","cacheData":{"env":{}}}